package DandtScripts;

import java.io.File;

/**
 * Script originally by Meihou35
 * <p>
 * Converted into Java by Strat
 * <p>
 * A script that sets the industry sizes for each state.
 */
public class Industry {

    public void industrySizeScript(){
        File[] states = FileManipulator.getAllFilesInDirectory("history/states");

        //System.out.println(
        //    Dandt.convertToString(
        //        FileManipulator.readFile(states[0])
        //    )
        //);
        
        for(File f : states){
            //First, clear the stuff put into the state file by the industry script
            String text[] = FileManipulator.readFile(f);
            int first = FileManipulator.getLine(text, 0, "#AUTOGENERATED"); //Get first line
            int last = FileManipulator.getLine(text, first+1, "#END OF AUTO"); //Get last line
            text = Dandt.removeLines(text, first, last);

            int historyStart = FileManipulator.getLine(text, 0, "history");
            int historyEnd = FileManipulator.findMatchingCurlyBrace(text, historyStart);

            int state_population = FileManipulator.getNumber(text[FileManipulator.getLine(text, 0, "manpower")]);
            
            /*
            Slaves: 0.0%
            Unskilled: 53.5%
            Skilled: 29.2%
            Educated: 15.4%
            Soldiers: 0.5%
            Bureaucrats: 1.0%
            Capitalists: 0.4%
            */
            double[] pop_type_percentage = { 0.0, 0.535, 0.292, 0.154, 0.005, 0.01, 0.004 };
            double pops_male_female_ratio = 1.033;
            double retiree_percentage = 0.043893;
            double adult_elderly_percentage = 0.6306;
            double[] pop_type_workforce_amount = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};

            for(int i = 0; i < pop_type_workforce_amount.length; i++){
                pop_type_workforce_amount[i] //Workforce amounts for each pop type

                = state_population //Take the total state population
                * (1 - retiree_percentage) //Get rid of the retirees from the calc
                * pop_type_percentage[i] //Get only that pop type
                * (1 - 1 / (1 + pops_male_female_ratio)) //Get only the males
                * adult_elderly_percentage; //Get non-children
            }
            int pops_per_size = 10000;
            double slaves_size = pop_type_workforce_amount[0] / pops_per_size;
            double workers_size = (pop_type_workforce_amount[1] + pop_type_workforce_amount[2] + pop_type_workforce_amount[3]) / pops_per_size;
            //double total_industry_size = slaves_size + workers_size;

            int true_slaves_size = (int)Math.round(slaves_size);
            int true_workers_size = (int)Math.round(workers_size);
            int true_total_industry_size = true_slaves_size + true_workers_size;


            //System.out.println(historyStart + " " + historyEnd);
            String newLines = "\n\t\t#AUTOGENERATED - Do not add anything here unless you want it to be wiped by the auto-script";
            newLines += "\n\t\t#Industries - " + true_total_industry_size;
            newLines += "\n\t\t\t#Extractors - " + true_total_industry_size;
            newLines += "\n\t\t\t\tset_variable = { grain_farm_size = " + true_total_industry_size + " }";
            newLines += "\n\t\t\t#Factories - " + 0;
            newLines += "\n\t\t\t#Services - " + 0;
            newLines += "\n\t\t#END OF AUTO";

            text[historyEnd-1] += newLines;

            if(state_population == 6646694){
                //System.out.println(Dandt.convertToString(text));
            }

            //Write to the file
            FileManipulator.writeToFile(f, text);
        }
    }
}
