# scripted map modes can be used to add new map modes to game_map_mode_factions
#
# example:
#
#scripted_map_modes = {
# test_map_mode = {
#	# the game will use name of the map mode for some strings:
#	# MAPMODE_TEST_MAP_MODE MAPMODE_TEST_MAP_MODE_NAME MAPMODE_TEST_MAP_MODE_DESCRIPTION as name & desc
#	# test_map_mode_tooltip & test_map_mode_tooltip_delayed for tooltips
#	# GFX_mapmode_buttons_deselected_small_test_map_mode GFX_mapmode_buttons_selected_small_test_map_mode for the icons
#
# 	# there are two layers for a map mode. bottom & top
# 	# both are same except during rendering they will be rendered in that order
#	# for each layer the game will figure out what borders to render and will ask script to pick a color for those
# 	top = {
#
# 		# type represents which borders will be used for rendering for this layer
# 		# or it can represent one of the hard coded map mode layers
# 		# must be one of following:
# 		#   none #will render nothing for this layer
# 		#   country #will render using country provinces
# 		#   state #will render using state provinces
# 		#   state_controller #will render using state provinces & controllers. if a state is shared between countries it will be called for each country
#
# 		#   game_map_mode_country (these are hard coded map mode layers. if these are used all other layer entries are ignored)
# 		#   game_map_mode_states
# 		#   game_map_mode_diplomacy
# 		#   game_map_mode_players
# 		#   game_map_mode_factions
# 		#   game_map_mode_ideology
# 		type = country
#
# 		# this trigger will be used for setting the color of a specific border
# 		# if trigger returns true then it will render that border
# 		# scope depends on type of the layer
# 		# scope is player
# 		# from scope depends on type
# 		#   country: current country that will be rendered
# 		#   state: current state that will be rendered
# 		#   state_controller: current state that will be rendered and from from scope will be the controller of current portion of the state
# 		# if return value is true the game expects you to set some temp variables which will be used as border color etc
#
# 		color = {
# 			set_temp_variable = { red = 0.0 }
# 			set_temp_variable = { blue = 1.0 }
# 			set_temp_variable = { green = 0.0 }
# 			set_temp_variable = { alpha = 1.0 }
#
# 			# only needed if thickness = yes on parent
# 			# specify layer thickness
# 			set_temp_variable = { thickness = 10.0 }
#
# 			# if set border will pulsate
# 			set_temp_variable = { highlighted = 1.0 }
#
# 			#always = yes
# 		}
#
#
# 		# a target list that can be used to limit which scopes will be rendered on map
# 		# similar to targeted decisions
# 		# highly recommended for perfomance, otherwise it will try to render for every scope
# 		targets = {
# 			#target_array = robot_map_icon_array
# 			#targets
# 			#target_trigger
# 			#... everything targeted decisions support
# 		}
#
# 		# if the border has thickness then set
# 		thickness = yes
# 	}
#
# 	bottom = {
# 		# same structure as top
#
# 		type = none
# 	}
#
#
# 	# if we want to show texts on map this you can set far_text & near_text
# 	# must be one of the:
# 	#  none
# 	#  country
# 	#  state
# 	#  faction
# 	#  player
#
# 	far_text = country
# 	near_text = state
#
#	# if yes, the game will update the map mode daily_update
#	# otherwise force_update_map_mode effect can be used
#	update_daily = yes
#
# }
#}
scripted_map_modes = {
	government_map_mode = {
		top = {
			type = country

			color = {
				FROM = {
					set_temp_variable = { PREV.ruling_temp = govt_coalition_leader_array^0 }
					set_temp_variable = { PREV.strength_temp = govt_coalition_strength }
				}
				if = {
					limit = {
						check_variable = { ruling_temp = 0 }
					}
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 100 }
					set_temp_variable = { blue = 100 }
				}
				else = {
					set_temp_variable = { red = global.red@var:ruling_temp }
					set_temp_variable = { green = global.green@var:ruling_temp }
					set_temp_variable = { blue = global.blue@var:ruling_temp }
				}

				# Adjustments
				divide_temp_variable = { red = 255 }
				divide_temp_variable = { green = 255 }
				divide_temp_variable = { blue = 255 }
				set_temp_variable = { alpha = 1 }

				set_temp_variable = { thickness = 40 }

				set_temp_variable = { highlighted = 0 }

				#always = yes
			}

			targets = {

			}

			thickness = yes
		}
		bottom = {
			type = state

			color = {
				FROM = {
					OWNER = {
						set_temp_variable = { PREV.PREV.ruling_temp = govt_coalition_leader_array^0 }
						set_temp_variable = { PREV.PREV.strength_temp = govt_coalition_strength }
					}
				}
				if = {
					limit = {
						check_variable = { ruling_temp = 0 }
					}
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 100 }
					set_temp_variable = { blue = 100 }
					set_temp_variable = { alpha = 100 }
				}
				else = {
					set_temp_variable = { red = global.red@var:ruling_temp }
					set_temp_variable = { green = global.green@var:ruling_temp }
					set_temp_variable = { blue = global.blue@var:ruling_temp }
					set_temp_variable = { alpha = strength_temp }
				}

				# Adjustments
				divide_temp_variable = { red = 255 }
				divide_temp_variable = { green = 255 }
				divide_temp_variable = { blue = 255 }
				divide_temp_variable = { alpha = 100 }

				set_temp_variable = { thickness = 10 }

				#set_temp_variable = { thickness = 1 }
				set_temp_variable = { highlighted = 0 }

				multiply_temp_variable = { alpha = 2 }
				subtract_from_temp_variable = { alpha = 1 }
				if = {
					limit = {
						check_variable = { alpha < 0.25 }
					}
					set_temp_variable = { alpha = 0.25 }
				}
				else_if = {
					limit = {
						check_variable = { alpha > 0.6 }
					}
					set_temp_variable = { alpha = 0.6 }
				}

				#always = yes
			}

			targets = {

			}

			thickness = no
		}

		far_text = country
		near_text = country

		update_daily = no
	}
	alignment_map_mode = {
		top = {
			type = country

			color = {
				FROM = {
					set_temp_variable = { PREV.ruling_temp = govt_coalition_leader_array^0 }
					set_temp_variable = { PREV.strength_temp = govt_coalition_strength }
				}
				if = {
					limit = {
						check_variable = { ruling_temp = 0 }
					}
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 100 }
					set_temp_variable = { blue = 100 }
				}
				else = {
					set_temp_variable = { red = global.red@var:ruling_temp }
					set_temp_variable = { green = global.green@var:ruling_temp }
					set_temp_variable = { blue = global.blue@var:ruling_temp }
				}

				# Adjustments
				divide_temp_variable = { red = 255 }
				divide_temp_variable = { green = 255 }
				divide_temp_variable = { blue = 255 }
				set_temp_variable = { alpha = 1 }

				set_temp_variable = { thickness = 40 }

				set_temp_variable = { highlighted = 0 }

				#always = yes
			}

			targets = {

			}

			thickness = yes
		}
		bottom = {
			type = state

			color = {
				FROM = {
					OWNER = {
						set_temp_variable = { PREV.PREV.ruling_temp = govt_coalition_leader_array^0 }
						set_temp_variable = { PREV.PREV.strength_temp = govt_coalition_strength }
					}
				}
				if = {
					limit = {
						check_variable = { ruling_temp = 0 }
					}
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 100 }
					set_temp_variable = { blue = 100 }
					set_temp_variable = { alpha = 100 }
				}
				else = {
					set_temp_variable = { red = global.red@var:ruling_temp }
					set_temp_variable = { green = global.green@var:ruling_temp }
					set_temp_variable = { blue = global.blue@var:ruling_temp }
					set_temp_variable = { alpha = strength_temp }
				}

				# Adjustments
				divide_temp_variable = { red = 255 }
				divide_temp_variable = { green = 255 }
				divide_temp_variable = { blue = 255 }
				divide_temp_variable = { alpha = 100 }

				set_temp_variable = { thickness = 10 }

				#set_temp_variable = { thickness = 1 }
				set_temp_variable = { highlighted = 0 }

				multiply_temp_variable = { alpha = 2 }
				subtract_from_temp_variable = { alpha = 1 }
				if = {
					limit = {
						check_variable = { alpha < 0.25 }
					}
					set_temp_variable = { alpha = 0.25 }
				}
				else_if = {
					limit = {
						check_variable = { alpha > 0.6 }
					}
					set_temp_variable = { alpha = 0.6 }
				}

				#always = yes
			}

			targets = {

			}

			thickness = no
		}

		far_text = country
		near_text = country

		update_daily = no
	}
	market_map_mode = {
		top = {
			type = country

			color = {
				FROM = {
					if = {
						limit = { has_variable = market_leader }
						set_temp_variable = { red = global.red@var:market_leader }
						set_temp_variable = { green = global.green@var:market_leader }
						set_temp_variable = { blue = global.blue@var:market_leader }
					}
					else = {
						set_temp_variable = { red = global.red@var:THIS }
						set_temp_variable = { green = global.green@var:THIS }
						set_temp_variable = { blue = global.blue@var:THIS }
					}
					set_temp_variable = { alpha = 1 }
					set_temp_variable = { thickness = 40 }
				}
			}

			targets = {

			}

			thickness = yes
		}
		bottom = {
			type = country

			color = {
				FROM = {
					if = {
						limit = {
							check_variable = {
								market_leader = ROOT
							}
						}
						set_temp_variable = { red = 0.5 }
						set_temp_variable = { green = 0.5 }
						set_temp_variable = { blue = 0.7 }
						set_temp_variable = { alpha = 0.55 }
						if = {
							limit = {
								check_variable = {
									market_leader = THIS
								}
							}
							set_temp_variable = { alpha = 0.75 }
						}
					}
					else_if = {
						limit = {
							set_temp_variable = { country_temp = THIS }
							ROOT = { can_trade_with = no }
						}
						set_temp_variable = { red = 0.7 }
						set_temp_variable = { green = 0.5 }
						set_temp_variable = { blue = 0.5 }
						set_temp_variable = { alpha = 0.55 }
					}
					else = {
						set_temp_variable = { red = 0.5 }
						set_temp_variable = { green = 0.7 }
						set_temp_variable = { blue = 0.5 }
						set_temp_variable = { alpha = 0.55 }
					}
				}
				# set_temp_variable = { alpha = 0.65 }

				#always = yes
			}

			targets = {

			}

			thickness = no
		}

		far_text = country
		near_text = country

		update_daily = no
	}

	gdp_map_mode = {
		top = {
			type = state

			color = {
				set_temp_variable = { red = 0.0 }
				set_temp_variable = { blue = 0.0 }
				set_temp_variable = { green = 0.0 }
				set_temp_variable = { alpha = 1 }
				if = {
					limit = {
						FROM = { check_variable = { gdp > 0 } }
					}
					set_temp_variable = { hue = FROM.gdp }
					divide_temp_variable = { hue = global.highest_state_gdp }
					multiply_temp_variable = { hue = 5 }

					set_temp_variable = { hmod = hue }
					#multiply_temp_variable = { hmod = 6 }
					if = {
						limit = {
							NOT = { check_variable = { hmod < 2 } }
						}
						subtract_from_temp_variable = { hmod = 2 }
						if = {
							limit = {
								NOT = { check_variable = { hmod < 2 } }
							}
							subtract_from_temp_variable = { hmod = 2 }
						}
					}
					subtract_from_temp_variable = { hmod = 1 }
					if = {
						limit = {
						   check_variable = { hmod < 0 }
						}
						multiply_temp_variable = { hmod = -1 }
					}

					set_temp_variable = { xmod = 1 }
					subtract_from_temp_variable = { xmod = hmod }

					set_temp_variable = { x = 1 }
					multiply_temp_variable = { x = xmod }

					#multiply_temp_variable = { hue = 6 }
					if = {
						limit = {
							check_variable = { hue < 1 }
						}
						set_temp_variable = { red = 1 }
						set_temp_variable = { green = x }
						set_temp_variable = { blue = 0 }
					}
					else_if = {
						limit = {
							check_variable = { hue < 2 }
						}
						set_temp_variable = { red = x }
						set_temp_variable = { green = 1 }
						set_temp_variable = { blue = 0 }
					}
					else_if = {
						limit = {
							check_variable = { hue < 3 }
						}
						set_temp_variable = { red = 0 }
						set_temp_variable = { green = 1 }
						set_temp_variable = { blue = x }
					}
					else_if = {
						limit = {
							check_variable = { hue < 4 }
						}
						set_temp_variable = { red = 0 }
						set_temp_variable = { green = x }
						set_temp_variable = { blue = 1 }
					}
					else_if = {
						limit = {
							check_variable = { hue < 5 }
						}
						set_temp_variable = { red = x }
						set_temp_variable = { green = 0 }
						set_temp_variable = { blue = 1 }
					}
					else_if = {
						limit = {
							check_variable = { hue < 6 }
						}
						set_temp_variable = { red = 1 }
						set_temp_variable = { green = 0 }
						set_temp_variable = { blue = x }
					}
					set_temp_variable = { alpha = 1 }
				}

				#set_temp_variable = { thickness = 1 }
				set_temp_variable = { highlighted = 0 }

				#always = yes
			}

			targets = {

			}

			thickness = no
		}

		bottom = {
			type = none
		}

		far_text = country
		near_text = state

		update_daily = no
	}
	sol_map_mode = {
		top = {
			type = state

			color = {
				set_temp_variable = { red = 0.0 }
				set_temp_variable = { blue = 0.0 }
				set_temp_variable = { green = 0.0 }
				set_temp_variable = { alpha = 1 }
				if = {
					limit = {
						FROM = { check_variable = { pops_sol > 0 } }
					}
					set_temp_variable = { hue = FROM.pops_sol }
					if = {
						limit = {
							check_variable = { global.highest_state_sol > 75 }
						}
						divide_temp_variable = { hue = global.highest_state_sol }
					}
					else = {
						divide_temp_variable = { hue = 75 }
					}
					multiply_temp_variable = { hue = 5 }

					set_temp_variable = { hmod = hue }
					#multiply_temp_variable = { hmod = 6 }
					if = {
						limit = {
							NOT = { check_variable = { hmod < 2 } }
						}
						subtract_from_temp_variable = { hmod = 2 }
						if = {
							limit = {
								NOT = { check_variable = { hmod < 2 } }
							}
							subtract_from_temp_variable = { hmod = 2 }
						}
					}
					subtract_from_temp_variable = { hmod = 1 }
					if = {
						limit = {
						   check_variable = { hmod < 0 }
						}
						multiply_temp_variable = { hmod = -1 }
					}

					set_temp_variable = { xmod = 1 }
					subtract_from_temp_variable = { xmod = hmod }

					set_temp_variable = { x = 1 }
					multiply_temp_variable = { x = xmod }

					#multiply_temp_variable = { hue = 6 }
					if = {
						limit = {
							check_variable = { hue < 1 }
						}
						set_temp_variable = { red = 1 }
						set_temp_variable = { green = x }
						set_temp_variable = { blue = 0 }
					}
					else_if = {
						limit = {
							check_variable = { hue < 2 }
						}
						set_temp_variable = { red = x }
						set_temp_variable = { green = 1 }
						set_temp_variable = { blue = 0 }
					}
					else_if = {
						limit = {
							check_variable = { hue < 3 }
						}
						set_temp_variable = { red = 0 }
						set_temp_variable = { green = 1 }
						set_temp_variable = { blue = x }
					}
					else_if = {
						limit = {
							check_variable = { hue < 4 }
						}
						set_temp_variable = { red = 0 }
						set_temp_variable = { green = x }
						set_temp_variable = { blue = 1 }
					}
					else_if = {
						limit = {
							check_variable = { hue < 5 }
						}
						set_temp_variable = { red = x }
						set_temp_variable = { green = 0 }
						set_temp_variable = { blue = 1 }
					}
					else_if = {
						limit = {
							check_variable = { hue < 6 }
						}
						set_temp_variable = { red = 1 }
						set_temp_variable = { green = 0 }
						set_temp_variable = { blue = x }
					}
					set_temp_variable = { alpha = 1 }
				}

				#set_temp_variable = { thickness = 1 }
				set_temp_variable = { highlighted = 0 }

				#always = yes
			}

			targets = {

			}

			thickness = no
		}

		bottom = {
			type = none
		}

		far_text = country
		near_text = state

		update_daily = no
	}
	buildings_map_mode = {
		top = {
			type = state

			color = {
				set_temp_variable = { red = 0.0 }
				set_temp_variable = { blue = 0.0 }
				set_temp_variable = { green = 0.0 }
				set_temp_variable = { alpha = 1 }
				if = {
					limit = {
						is_in_array = {
							array = controlled_states_array
							value = FROM.id
						}
						set_temp_variable = { red = 0.5 }
						set_temp_variable = { blue = 0.5 }
						set_temp_variable = { green = 0.8 }
					}
				}
			}

			targets = {
				target_array = ROOT.controlled_states_array
			}

			thickness = no
		}

		bottom = {
			type = none
		}

		far_text = country
		near_text = state

		update_daily = no
	}
	
	culture_map_mode = {
		top = {
			type = state

			color = {
				if = {
					limit = {
						check_variable = { FROM.pops_culture_type^0 = 0 }
					}
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 100 }
					set_temp_variable = { blue = 100 }
					set_temp_variable = { alpha = 1 }
				}
				else = {
					set_temp_variable = { culture_token_temp = FROM.pops_culture_type^0 }
					set_temp_variable = { red = global.red@var:culture_token_temp }
					set_temp_variable = { green = global.green@var:culture_token_temp }
					set_temp_variable = { blue = global.blue@var:culture_token_temp }
					set_temp_variable = { alpha = FROM.pops_culture_percentage@var:culture_token_temp }
				}

				# Adjustments
				divide_temp_variable = { red = 255 }
				divide_temp_variable = { green = 255 }
				divide_temp_variable = { blue = 255 }

				multiply_temp_variable = { alpha = 2 }
				subtract_from_temp_variable = { alpha = 1 }
				if = {
					limit = {
						check_variable = { alpha < 0.25 }
					}
					set_temp_variable = { alpha = 0.25 }
				}

				#set_temp_variable = { thickness = 1 }
				set_temp_variable = { highlighted = 0 }

				#always = yes
			}

			targets = {

			}

			thickness = no
		}

		bottom = {
			type = none
		}

		far_text = country
		near_text = state

		update_daily = no
	}
	religion_map_mode = {
		top = {
			type = state

			color = {
				if = {
					limit = {
						check_variable = { FROM.pops_religion_type^0 = 0 }
					}
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 100 }
					set_temp_variable = { blue = 100 }
					set_temp_variable = { alpha = 1 }
				}
				else = {
					set_temp_variable = { religion_token_temp = FROM.pops_religion_type^0 }
					set_temp_variable = { red = global.red@var:religion_token_temp }
					set_temp_variable = { green = global.green@var:religion_token_temp }
					set_temp_variable = { blue = global.blue@var:religion_token_temp }
					set_temp_variable = { alpha = FROM.pops_religion_percentage@var:religion_token_temp }
				}

				# Adjustments
				divide_temp_variable = { red = 255 }
				divide_temp_variable = { green = 255 }
				divide_temp_variable = { blue = 255 }

				multiply_temp_variable = { alpha = 2 }
				subtract_from_temp_variable = { alpha = 1 }
				if = {
					limit = {
						check_variable = { alpha < 0.25 }
					}
					set_temp_variable = { alpha = 0.25 }
				}

				#set_temp_variable = { thickness = 1 }
				set_temp_variable = { highlighted = 0 }

				#always = yes
			}

			targets = {

			}

			thickness = no
		}

		bottom = {
			type = none
		}

		far_text = country
		near_text = state

		update_daily = no
	}
	ideology_map_mode = {
		top = {
			type = state

			color = {
				if = {
					limit = {
						check_variable = { FROM.pops_ideology_type^0 = 0 }
					}
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 100 }
					set_temp_variable = { blue = 100 }
					set_temp_variable = { alpha = 1 }
				}
				else = {
					set_temp_variable = { ideology_token_temp = FROM.pops_ideology_type^0 }
					set_temp_variable = { red = global.red@var:ideology_token_temp }
					set_temp_variable = { green = global.green@var:ideology_token_temp }
					set_temp_variable = { blue = global.blue@var:ideology_token_temp }
					set_temp_variable = { alpha = FROM.pops_ideology_percentage@var:ideology_token_temp }
				}

				# Adjustments
				divide_temp_variable = { red = 255 }
				divide_temp_variable = { green = 255 }
				divide_temp_variable = { blue = 255 }

				multiply_temp_variable = { alpha = 2 }
				subtract_from_temp_variable = { alpha = 1 }
				if = {
					limit = {
						check_variable = { alpha < 0.25 }
					}
					set_temp_variable = { alpha = 0.25 }
				}

				#set_temp_variable = { thickness = 1 }
				set_temp_variable = { highlighted = 0 }

				#always = yes
			}

			targets = {

			}

			thickness = no
		}

		bottom = {
			type = none
		}

		far_text = country
		near_text = state

		update_daily = no
	}
	climate_map_mode = {
		top = {
			type = state

			color = {
				if = {
					limit = {
						FROM = {
							OR = {
								has_dynamic_modifier = { modifier = climate_arid_tropic }
								has_dynamic_modifier = { modifier = climate_arid_subtropic }
								has_dynamic_modifier = { modifier = climate_arid_cool }
								has_dynamic_modifier = { modifier = climate_arid_polar }
							}
						}
					}
					set_temp_variable = { red = 248 }
					set_temp_variable = { green = 251 }
					set_temp_variable = { blue = 108 }
				}
				else_if = {
					limit = {
						FROM = {
							OR = {
								has_dynamic_modifier = { modifier = climate_continental_tropic }
								has_dynamic_modifier = { modifier = climate_continental_subtropic }
								has_dynamic_modifier = { modifier = climate_continental_warm }
								has_dynamic_modifier = { modifier = climate_continental_cool }
								has_dynamic_modifier = { modifier = climate_continental_polar }
							}
						}
					}
					set_temp_variable = { red = 171 }
					set_temp_variable = { green = 222 }
					set_temp_variable = { blue = 145 }
				}
				else_if = {
					limit = {
						FROM = {
							OR = {
								has_dynamic_modifier = { modifier = climate_mild_tropic }
								has_dynamic_modifier = { modifier = climate_mild_subtropic }
								has_dynamic_modifier = { modifier = climate_mild_warm }
								has_dynamic_modifier = { modifier = climate_mild_cool }
								has_dynamic_modifier = { modifier = climate_mild_polar }
							}
						}
					}
					set_temp_variable = { red = 109 }
					set_temp_variable = { green = 177 }
					set_temp_variable = { blue = 77 }
				}

				else_if = {
					limit = {
						FROM = {
							OR = {
								has_dynamic_modifier = { modifier = climate_humid_tropic }
								has_dynamic_modifier = { modifier = climate_humid_subtropic }
								has_dynamic_modifier = { modifier = climate_humid_cool }
								has_dynamic_modifier = { modifier = climate_humid_polar }
							}
						}
					}
					set_temp_variable = { red = 57 }
					set_temp_variable = { green = 80 }
					set_temp_variable = { blue = 62 }
				}
				else = {
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 100 }
					set_temp_variable = { blue = 100 }
					set_temp_variable = { alpha = 1 }
				}


				# Adjustments
				divide_temp_variable = { red = 255 }
				divide_temp_variable = { green = 255 }
				divide_temp_variable = { blue = 255 }
				set_temp_variable = { alpha = 1 }

				set_temp_variable = { thickness = 40 }
				# set_temp_variable = { highlighted = 1 }

				#always = yes
			}

			targets = {

			}

			thickness = yes
		}

		bottom = {
			type = state

			color = {
				if = {
					limit = {
						FROM = {
							OR = {
								has_dynamic_modifier = { modifier = climate_humid_tropic }
								has_dynamic_modifier = { modifier = climate_arid_tropic }
								has_dynamic_modifier = { modifier = climate_mild_tropic }
								has_dynamic_modifier = { modifier = climate_continental_tropic }
							}
						}
					}
					set_temp_variable = { red = 248 }
					set_temp_variable = { green = 251 }
					set_temp_variable = { blue = 108 }
				}
				else_if = {
					limit = {
						FROM = {
							OR = {
								has_dynamic_modifier = { modifier = climate_humid_subtropic }
								has_dynamic_modifier = { modifier = climate_arid_subtropic }
								has_dynamic_modifier = { modifier = climate_mild_subtropic }
								has_dynamic_modifier = { modifier = climate_continental_subtropic }
							}
						}
					}
					set_temp_variable = { red = 171 }
					set_temp_variable = { green = 222 }
					set_temp_variable = { blue = 145 }
				}
				else_if = {
					limit = {
						FROM = {
							OR = {
								has_dynamic_modifier = { modifier = climate_mild_warm }
								has_dynamic_modifier = { modifier = climate_continental_warm }
							}
						}
					}
					set_temp_variable = { red = 109 }
					set_temp_variable = { green = 177 }
					set_temp_variable = { blue = 77 }
				}
				else_if = {
					limit = {
						FROM = {
							OR = {
								has_dynamic_modifier = { modifier = climate_humid_cool }
								has_dynamic_modifier = { modifier = climate_arid_cool }
								has_dynamic_modifier = { modifier = climate_mild_cool }
								has_dynamic_modifier = { modifier = climate_continental_cool }
							}
						}
					}
					set_temp_variable = { red = 57 }
					set_temp_variable = { green = 80 }
					set_temp_variable = { blue = 62 }
				}
				else_if = {
					limit = {
						FROM = {
							OR = {
								has_dynamic_modifier = { modifier = climate_humid_polar }
								has_dynamic_modifier = { modifier = climate_arid_polar }
								has_dynamic_modifier = { modifier = climate_mild_polar }
								has_dynamic_modifier = { modifier = climate_continental_polar }
							}
						}
					}
					set_temp_variable = { red = 88 }
					set_temp_variable = { green = 113 }
					set_temp_variable = { blue = 153 }
				}
				else = {
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 100 }
					set_temp_variable = { blue = 100 }
				}


				# Adjustments
				divide_temp_variable = { red = 255 }
				divide_temp_variable = { green = 255 }
				divide_temp_variable = { blue = 255 }
				set_temp_variable = { alpha = 0.6 }

				#set_temp_variable = { thickness = 1 }
				set_temp_variable = { highlighted = 0 }

				#always = yes
			}

			targets = {

			}

			thickness = no
		}

		far_text = country
		near_text = state

		update_daily = no
	}
	soil_quality_map_mode = {
		top = {
			type = state

			color = {
				if = {
					limit = {
						FROM = { has_dynamic_modifier = { modifier = soil_quality_breadbasket } }
					}
					set_temp_variable = { red = 0 }
					set_temp_variable = { green = 255 }
					set_temp_variable = { blue = 150 }
				}
				else_if = {
					limit = {
						FROM = { has_dynamic_modifier = { modifier = soil_quality_farmland } }
					}
					set_temp_variable = { red = 0 }
					set_temp_variable = { green = 150 }
					set_temp_variable = { blue = 25 }
				}
				else_if = {
					limit = {
						FROM = { has_dynamic_modifier = { modifier = soil_quality_average } }
					}
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 175 }
					set_temp_variable = { blue = 15 }
				}

				else_if = {
					limit = {
						FROM = { has_dynamic_modifier = { modifier = soil_quality_marginal } }
					}
					set_temp_variable = { red = 210 }
					set_temp_variable = { green = 200 }
					set_temp_variable = { blue = 0 }
				}
				else_if = {
					limit = {
						FROM = { has_dynamic_modifier = { modifier = soil_quality_wasteland } }
					}
					set_temp_variable = { red = 150 }
					set_temp_variable = { green = 75 }
					set_temp_variable = { blue = 0 }
				}
				else = {
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 100 }
					set_temp_variable = { blue = 100 }
				}


				# Adjustments
				divide_temp_variable = { red = 255 }
				divide_temp_variable = { green = 255 }
				divide_temp_variable = { blue = 255 }
				set_temp_variable = { alpha = 0.65 }

				set_temp_variable = { thickness = 10 }
				set_temp_variable = { highlighted = 0 }

				#always = yes
			}

			targets = {

			}

			thickness = yes
		}

		bottom = {
			type = state

			color = {
				if = {
					limit = {
						FROM = { has_dynamic_modifier = { modifier = soil_quality_breadbasket } }
					}
					set_temp_variable = { red = 0 }
					set_temp_variable = { green = 255 }
					set_temp_variable = { blue = 150 }
				}
				else_if = {
					limit = {
						FROM = { has_dynamic_modifier = { modifier = soil_quality_farmland } }
					}
					set_temp_variable = { red = 0 }
					set_temp_variable = { green = 150 }
					set_temp_variable = { blue = 25 }
				}
				else_if = {
					limit = {
						FROM = { has_dynamic_modifier = { modifier = soil_quality_average } }
					}
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 175 }
					set_temp_variable = { blue = 15 }
				}

				else_if = {
					limit = {
						FROM = { has_dynamic_modifier = { modifier = soil_quality_marginal } }
					}
					set_temp_variable = { red = 210 }
					set_temp_variable = { green = 200 }
					set_temp_variable = { blue = 0 }
				}
				else_if = {
					limit = {
						FROM = { has_dynamic_modifier = { modifier = soil_quality_wasteland } }
					}
					set_temp_variable = { red = 150 }
					set_temp_variable = { green = 75 }
					set_temp_variable = { blue = 0 }
				}
				else = {
					set_temp_variable = { red = 100 }
					set_temp_variable = { green = 100 }
					set_temp_variable = { blue = 100 }
				}


				# Adjustments
				divide_temp_variable = { red = 255 }
				divide_temp_variable = { green = 255 }
				divide_temp_variable = { blue = 255 }
				set_temp_variable = { alpha = 0.65 }

				#set_temp_variable = { thickness = 1 }
				set_temp_variable = { highlighted = 0 }

				#always = yes
			}

			targets = {

			}

			thickness = no
		}

		far_text = country
		near_text = state

		update_daily = no
	}
	

	
}